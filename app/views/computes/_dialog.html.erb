<%
   environments = Environment.for_account(current_user.account).asc(:name).all
   selected_env = compute.environment ? compute.environment.id : nil
   roles = Role.external.asc(:name).all
   groups = (compute.groups||[]).join(",")
   userdata = Userdata.all
   selected_ud = compute.userdata ? compute.userdata.id : Userdata.named("default").id
%>

<script id="new_compute_dialog" type="text/template">
  <%= simple_form_for(compute, :html => { :class => "compute_form form-horizontal" }) do |f| %>
      <div>
        <ul class="nav nav-tabs">
          <li class="active"><a href="#tab1" data-toggle="tab">Main</a></li>
          <li><a href="#tab2" data-toggle="tab">Advanced</a></li>
        </ul>

        <div class="tab-content">
          <div class="tab-pane fade in active" id="tab1">
            <div class="form-inputs">
              <%= f.input :name %>
              <%= f.input :environment, :collection => environments, selected: selected_env %>
              <%= f.association :roles, :collection => roles, :as => :check_boxes %>
              <%#= f.input :roles, :input_html => { :value => (compute.roles||[]).join(",") } %>
            </div>
          </div>
          <div class="tab-pane fade" id="tab2">
            <%= f.input :region %>
            <%= f.input :flavor %>
            <%= f.input :image %>
            <%= f.input :groups, :input_html => { :value => groups } %>
            <%= f.input :keypair %>
            <%= f.input :userdata, collection: userdata, include_blank: false, selected: selected_ud %>
          </div>
        </div>
      </div>

  <% end %>
</script>

<script type="text/javascript">
    $(function () {
        $("#create_compute").on("click", function () {
            bootbox.dialog($("#new_compute_dialog").html(), [
                {
                    "Cancel": function () {
                        console.log("cancel");
                    }
                },
                {
                    "Create": function () {
                        console.log("create");
                        var f = $(".compute_form:last"); // because bootbox makes a clone
                        data = f.serialize();
                        console.log("data");
                        console.log(f.serializeArray());
                        bootbox.modal("please wait", "creating");
                        console.log("post");
                        $.post("/computes.json", data, function () {
                            console.log("success");
                            bootbox.hideAll();
                        });
                    }
                }
            ], {header: "Create Compute"})
        });
    });
</script>
