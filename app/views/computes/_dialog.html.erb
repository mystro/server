<%
   if type != "general"
     n = environment.get_next_number(type)
     compute = Compute.new_from_template(environment, Hashie::Mash.new(tserver), n)
   else
     compute = Compute.new
     compute.set_defaults(session[:org])
   end

   compute.environment = environment if environment

   organization = Organization.named(session[:org])
   regions = nil
   flavors = nil
   images = nil
   groups = nil
   keypairs = nil
   if organization
     regions = organization.selectors.regions
     flavors = organization.selectors.flavors
     images = organization.selectors_images
     groups = organization.selectors.groups
     keypairs = organization.selectors.keypairs
   end

   environments = Environment.for_org(session[:org]).asc(:name).all
   balancers = Balancer.for_org(session[:org]).asc(:name).all
   selected_env = compute.environment ? compute.environment.id : nil
   selected_balancer = type != "general" ? Balancer.named("#{environment.name}-#{tserver["balancer"]}").id : nil rescue nil
   selected_img = compute.image
   roles = Role.external.asc(:name).all
   userdata = Userdata.all
   selected_ud = compute.userdata ? compute.userdata.id : Userdata.named("default").id
%>

<script id="new_compute_dialog_<%= type %>" type="text/template">
  <%#= "#{environment.name}-#{tserver["balancer"]}" %>
  <%= simple_form_for(compute, :html => { :class => "compute_form form-horizontal" }) do |f| %>
      <div>
        <ul class="nav nav-tabs">
          <li class="active"><a href="#tab1" data-toggle="tab">Main</a></li>
          <li><a href="#tab2" data-toggle="tab">Advanced</a></li>
        </ul>

        <div class="tab-content">
          <div class="tab-pane fade in active" id="tab1">
            <div class="form-inputs">
              <%= f.input :name %>
              <% if compute.num > 0 %>
              <%= f.input :num, as: :integer %>
              <% end %>
              <%= f.input :environment, :collection => environments, selected: selected_env %>
              <%= f.input :balancer, :collection => balancers, selected: selected_balancer, include_blank: true %>
              <%= f.association :roles, :collection => roles, :as => :check_boxes %>
              <%#= f.input :roles, :input_html => { :value => (compute.roles||[]).join(",") } %>
            </div>
          </div>
          <div class="tab-pane fade" id="tab2">
            <%= f.input :region, collection: regions %>
            <%= f.input :flavor, collection: flavors %>
            <% if images %>
                <%= f.input :image do %>
                    <% f.select :image, grouped_options_for_select(images, selected_img) %>
                <% end %>
            <% else %>
                <%= f.input :image %>
            <% end %>
            <% if groups %>
                <%= f.input :groups, collection: groups, multiple: true, as: :check_boxes %>
            <% else %>
                <%= f.input :groups do %>
                  <%= f.input_field :groups, value: (compute.groups||[]).join(",") %>
                <% end %>
            <% end %>
            <%= f.input :keypair, collection: keypairs %>
            <%= f.input :userdata, collection: userdata, include_blank: false, selected: selected_ud %>
          </div>
        </div>
      </div>

  <% end %>
</script>
